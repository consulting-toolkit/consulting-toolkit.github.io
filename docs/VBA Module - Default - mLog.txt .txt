'VBA Module - Default - mLog
'Module Created by Warren Wamba 
'20/09/2020

'---
Option Explicit
Option Base 0

'---
Public vLogItems As Long
Public boolIsLogInApp As Boolean
Public vCurrentLog As cLog
Public vLog() As cLog

'---
'---
'---

'---
Sub aTask_Log_Init(Optional strProcessorName As String = "0atlcx00" _
                    , Optional strEngineName As String = "MAIN_ENGINE", Optional strTaskName As String = "LOG_ENG_INIT" _
                    , Optional strTaskDesc As String = "LOADING_LOG_PARAMETERS_CONFIG", Optional boolIsDebugPrint As Boolean = False)
    
    vLogItems = 0
    Set vCurrentLog = New cLog
    
    ReDim Preserve vLog(vLogItems)
    Set vLog(vLogItems) = New cLog
    Call vLog(vLogItems).Set_Log(vCurrentLog)
    vLogItems = vLogItems + 1
    
    If boolIsDebugPrint Then Debug.Print strTaskDesc
End Sub

'---
Sub aTask_Log_Start(Optional strProcessorName As String = "0atlcx01" _
                    , Optional strEngineName As String = "MAIN_ENGINE", Optional strTaskName As String = "START_APP_INIT" _
                    , Optional strTaskDesc As String = "STARTING_APP_PARAMETERS_INIT", Optional boolIsDebugPrint As Boolean = False)
    
    Call vCurrentLog.Init_Log(strProcessorName, strEngineName, strTaskName, strTaskDesc)
    ReDim Preserve vLog(vLogItems)
    Set vLog(vLogItems) = New cLog
    Call vLog(vLogItems).Set_Log(vCurrentLog)
    vLogItems = vLogItems + 1
    
    If boolIsDebugPrint Then Debug.Print strTaskDesc
End Sub

'---
Sub aTask_Log_Update(Optional strProcessorName As String = "0atlcx01" _
                    , Optional strEngineName As String = "MAIN_ENGINE", Optional strTaskName As String = "ENDING_APP_INIT" _
                    , Optional strTaskDesc As String = "ENDING_APP_PARAMETERS_INIT", Optional boolIsDebugPrint As Boolean = False)
    
    Call vCurrentLog.Update_Log(strProcessorName, strEngineName, strTaskName, strTaskDesc)
    ReDim Preserve vLog(vLogItems)
    Set vLog(vLogItems) = New cLog
    Call vLog(vLogItems).Set_Log(vCurrentLog)
    vLogItems = vLogItems + 1
    
    If boolIsDebugPrint Then Debug.Print strTaskDesc
End Sub

'---
Sub aTask_Log_Close(Optional strProcessorName As String = "0atlcx02" _
                    , Optional strEngineName As String = "MAIN_ENGINE", Optional strTaskName As String = "TERMINATE_APP_WARM_DOWN" _
                    , Optional strTaskDesc As String = "TERMINATE_APP_WARM_DOWN", Optional boolIsDebugPrint As Boolean = False)
    
    Call vCurrentLog.Close_Log(strProcessorName, strEngineName, strTaskName, strTaskDesc)
    ReDim Preserve vLog(vLogItems)
    Set vLog(vLogItems) = New cLog
    Call vLog(vLogItems).Set_Log(vCurrentLog)
    vLogItems = vLogItems + 1
    
    If boolIsDebugPrint Then Debug.Print strTaskDesc
End Sub


'---
Sub aTask_Print_Log_Info(Optional boolIsDumpInTextFile As Boolean = False)
    
    Dim i As Long, boolIsEmpty As Boolean
    
    Select Case boolIsDumpInTextFile
        Case False
            If Not IsMyLogEmpty(vLog) Then
                Call Fill_Log_Output(vLog)
                For i = LBound(vLog) To UBound(vLog)
                    Set vLog(i) = Nothing
                Next i
            Else
                Call Clear_Log_Data
            End If
        Case Else
            If Not IsMyLogEmpty(vLog) Then
                Call Clear_Log_Data
                Call DUMP_LOG_IN_TEXT_FILE(vLog, shMain.Range("Main_bRng_Output_Folder").value, "Validation Application Log Report_" & Format(Now, "yyyymmdd") & "_" & Format(Now, "HHmmss") & "_consol.txt")
            End If
    End Select
End Sub

'---
Public Sub Fill_Log_Output(vLog() As cLog)
    Dim wb As Workbook
    Dim sh As Worksheet
    Dim rng As Range

    Dim i As Long

    Set wb = ThisWorkbook
    Set sh = wb.Sheets("Log")
    Set rng = sh.Range("Log_bRng_Time")

    Application.ScreenUpdating = False
    Application.EnableEvents = False

    Call Clear_Log_Data

    For i = LBound(vLog) To UBound(vLog)
        rng.Offset(1 + i, 0).value = vLog(i).Time()
        rng.Offset(1 + i, 1).value = vLog(i).Processor()
        rng.Offset(1 + i, 2).value = vLog(i).Engine()
        rng.Offset(1 + i, 3).value = vLog(i).Task()
        rng.Offset(1 + i, 4).value = vLog(i).Description()
    Next i

    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub

'---
Public Sub Clear_Log_Data()
    Dim wb As Workbook
    Dim sh As Worksheet, shTmp As Worksheet
    Dim rng As Range, rngTmp As Range

    Dim i As Long

    Set wb = ThisWorkbook
    Set sh = wb.Sheets("Log")
    Set rng = sh.Range("Log_bRng_Time")

    Application.ScreenUpdating = False
    Application.EnableEvents = False

    Set shTmp = ActiveSheet
    Set rngTmp = ActiveCell

    sh.Activate
    rng.Activate
    Select Case rng.Offset(1 + i, 0).value
        Case Is <> ""
            rng.Offset(1, 0).Select
            Range(Selection, Selection.End(xlToRight)).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.value = ""
    End Select

    shTmp.Activate
    rngTmp.Select

    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub


'---
Sub DUMP_LOG_IN_TEXT_FILE(vLog() As cLog, outputFullFileFolder As String, outputFullFileName As String)
    
    Dim CellData As String: CellData = ""
    
    Dim strFullFileName As String
    Dim testDirectory As Boolean
    Dim i As Integer, j As Integer
    
    '---
    testDirectory = IsDirectoryExist(outputFullFileFolder)
    
    Select Case testDirectory
        Case True
            strFullFileName = Build_Full_File_Name(outputFullFileFolder, outputFullFileName)
            Open strFullFileName For Output As #2
            For i = 0 To UBound(vLog) + 2
                If i = 0 Then
                    CellData = CellData & "TIME" & ";"
                    CellData = CellData & "PROCESSOR" & ";"
                    CellData = CellData & "ENGINE" & ";"
                    CellData = CellData & "TASK" & ";"
                    CellData = CellData & "DESCRIPTION"
                    
                    Print #2, CellData
                    CellData = ""
                ElseIf i < UBound(vLog) + 2 Then
                    CellData = CellData & vLog(i - 1).Time() & ";"
                    CellData = CellData & vLog(i - 1).Processor() & ";"
                    CellData = CellData & vLog(i - 1).Engine() & ";"
                    CellData = CellData & vLog(i - 1).Task() & ";"
                    CellData = CellData & vLog(i - 1).Description() & ";"
                    
                    Print #2, CellData
                    CellData = ""
                Else
                    CellData = CellData & "END OF LOG"
                    Print #2, CellData
                    CellData = ""
                End If
            Next i
            Close #2
            MsgBox ("Done")
    End Select
    
End Sub